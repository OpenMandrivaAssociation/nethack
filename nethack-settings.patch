diff --git a/include/config.h b/include/config.h
index 3efbfa2..244e68f 100644
--- a/include/config.h
+++ b/include/config.h
@@ -169,11 +169,11 @@
 
 #ifdef UNIX
 /* path and file name extension for compression program */
-#define COMPRESS "/usr/bin/compress"	/* Lempel-Ziv compression */
-#define COMPRESS_EXTENSION ".Z"		/* compress's extension */
+/*#define COMPRESS "/usr/bin/compress"*/	/* Lempel-Ziv compression */
+/*#define COMPRESS_EXTENSION ".Z"*/		/* compress's extension */
 /* An example of one alternative you might want to use: */
-/* #define COMPRESS "/usr/local/bin/gzip" */	/* FSF gzip compression */
-/* #define COMPRESS_EXTENSION ".gz" */		/* normal gzip extension */
+ #define COMPRESS "/usr/bin/gzip"	/* FSF gzip compression */
+ #define COMPRESS_EXTENSION ".gz"	/* normal gzip extension */
 #endif
 
 #ifndef COMPRESS
@@ -198,13 +198,14 @@
 # define CHDIR		/* delete if no chdir() available */
 #endif
 
+#define CHDIR
 #ifdef CHDIR
 /*
  * If you define HACKDIR, then this will be the default playground;
  * otherwise it will be the current directory.
  */
 # ifndef HACKDIR
-#  define HACKDIR "/usr/games/lib/nethackdir"
+#  define HACKDIR "MDV_HACKDIR"
 # endif
 
 /*
@@ -214,7 +215,7 @@
  * since the user might create files in a directory of his choice.
  * Of course SECURE is meaningful only if HACKDIR is defined.
  */
-/* #define SECURE */	/* do setuid(getuid()) after chdir() */
+#define SECURE /* do setuid(getuid()) after chdir() */
 
 /*
  * If it is desirable to limit the number of people that can play Hack
diff --git a/include/unixconf.h b/include/unixconf.h
index fe1b006..3b62e5c 100644
--- a/include/unixconf.h
+++ b/include/unixconf.h
@@ -2,6 +2,10 @@
 /* Copyright (c) Stichting Mathematisch Centrum, Amsterdam, 1985. */
 /* NetHack may be freely redistributed.  See license for details. */
 
+/* Defines for patches */
+#define HPMON
+#define PARANOID
+
 #ifdef UNIX
 #ifndef UNIXCONF_H
 #define UNIXCONF_H
@@ -37,7 +41,7 @@
 #define NETWORK		/* if running on a networked system */
 			/* e.g. Suns sharing a playground through NFS */
 /* #define SUNOS4 */	/* SunOS 4.x */
-/* #define LINUX */	/* Another Unix clone */
+#define LINUX	/* Another Unix clone */
 /* #define CYGWIN32 */	/* Unix on Win32 -- use with case sensitive defines */
 /* #define GENIX */	/* Yet Another Unix Clone */
 /* #define HISX */	/* Bull Unix for XPS Machines */
@@ -95,14 +99,15 @@
  *		Ralf Brown, 7/26/89 (from v2.3 hack of 10/10/88)
  */
 
-/* #define NO_FILE_LINKS */	/* if no hard links */
+/* #define NO_FILE_LINKS */ /* if no hard links */
 /* #define LOCKDIR "/usr/games/lib/nethackdir" */	/* where to put locks */
+/* #define LOCKDIR "/var/games/nethack"*/
 
 /*
  * If you want the static parts of your playground on a read-only file
  * system, define VAR_PLAYGROUND to be where the variable parts are kept.
  */
-/* #define VAR_PLAYGROUND "/var/lib/games/nethack" */
+#define VAR_PLAYGROUND "MDV_VAR_PLAYGROUND"
 
 
 /*
diff --git a/sys/unix/Makefile.doc b/sys/unix/Makefile.doc
index 647e90a..8baf07c 100644
--- a/sys/unix/Makefile.doc
+++ b/sys/unix/Makefile.doc
@@ -22,8 +22,8 @@ PSCMD = groff
 # Not appropriate for creating Guidebook.txt.
 # GUIDECMD = cat Guidebook.txt
 # The following works better with groff-1.18, eg on Linux
-# GUIDECMD = tbl tmac.n Guidebook.mn | nroff -c -Tascii | $(COLCMD)
-GUIDECMD = tbl tmac.n Guidebook.mn | nroff | $(COLCMD)
+GUIDECMD = tbl tmac.n Guidebook.mn | nroff -c -Tascii | $(COLCMD)
+# GUIDECMD = tbl tmac.n Guidebook.mn | nroff | $(COLCMD)
 
 # the basic guidebook
 Guidebook:	Guidebook.mn
diff --git a/sys/unix/Makefile.src b/sys/unix/Makefile.src
index 29ad99a..bd77fab 100644
--- a/sys/unix/Makefile.src
+++ b/sys/unix/Makefile.src
@@ -230,8 +230,8 @@ WINOBJ = $(WINTTYOBJ)
 # WINTTYLIB = -ltermcap
 # WINTTYLIB = -lcurses
 # WINTTYLIB = -lcurses16
-# WINTTYLIB = -lncurses
-WINTTYLIB = -ltermlib
+WINTTYLIB = -lncurses
+# WINTTYLIB = -ltermlib
 #
 # libraries for X11
 # If USE_XPM is defined in config.h, you will also need -lXpm here.
