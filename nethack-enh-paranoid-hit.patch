diff -urd nethack-3.4.2/dat/opthelp nh342par/dat/opthelp
--- nethack-3.4.2/dat/opthelp	2003-08-30 03:07:07.000000000 +0300
+++ nh342par/dat/opthelp	2003-09-05 16:36:28.000000000 +0300
@@ -61,6 +61,9 @@
 Boolean option if MFLOPPY was set at compile time:
 checkspace check free disk space before writing files to disk     [TRUE]
 
+Boolean option if PARANOID was set at compile time:
+paranoid_quit  ask for explicit 'yes' when quitting               [FALSE]
+
 Boolean option if EXP_ON_BOTL was set at compile time:
 showexp    display your accumulated experience points             [FALSE]
 
diff -urd nethack-3.4.2/include/flag.h nh342par/include/flag.h
--- nethack-3.4.2/include/flag.h	2003-08-30 03:07:17.000000000 +0300
+++ nh342par/include/flag.h	2003-09-05 16:35:33.000000000 +0300
@@ -217,6 +217,9 @@
 	boolean lan_mail;	/* mail is initialized */
 	boolean lan_mail_fetched; /* mail is awaiting display */
 #endif
+#ifdef PARANOID
+	boolean  paranoid_hit;  /* Ask for 'yes' when hitting peacefuls */
+#endif

 #if defined(HPMON) && defined(TEXTCOLOR)
         boolean use_hpmon;
 #endif

 /*
  * Window capability support.
  */
diff -urd nethack-3.4.2/src/options.c nh342par/src/options.c
--- nethack-3.4.2/src/options.c	2003-08-30 03:07:36.000000000 +0300
+++ nh342par/src/options.c	2003-09-05 16:35:33.000000000 +0300
@@ -155,6 +155,9 @@
 #else
 	{"page_wait", (boolean *)0, FALSE, SET_IN_FILE},
 #endif
+#ifdef PARANOID
+	{"paranoid_hit", &iflags.paranoid_hit, FALSE, SET_IN_GAME},
+#endif
 	{"perm_invent", &flags.perm_invent, FALSE, SET_IN_GAME},
 	{"popup_dialog",  &iflags.wc_popup_dialog, FALSE, SET_IN_GAME},	/*WC*/
 	{"prayconfirm", &flags.prayconfirm, TRUE, SET_IN_GAME},
diff -urd nethack-3.4.2/src/uhitm.c nh342par/src/uhitm.c
--- nethack-3.4.2/src/uhitm.c	2003-08-30 03:07:42.000000000 +0300
+++ nh342par/src/uhitm.c	2003-09-05 16:35:33.000000000 +0300
@@ -99,6 +99,9 @@
 struct obj *wep;	/* uwep for attack(), null for kick_monster() */
 {
 	char qbuf[QBUFSZ];
+#ifdef PARANOID
+	char buf[BUFSZ];
+#endif
 
 	/* if you're close enough to attack, alert any waiting monster */
 	mtmp->mstrategy &= ~STRAT_WAITMASK;
@@ -199,11 +202,26 @@
 			return(FALSE);
 		}
 		if (canspotmon(mtmp)) {
+#ifdef PARANOID
+			Sprintf(qbuf, "Really attack %s? [no/yes]",
+				mon_nam(mtmp));
+			if (iflags.paranoid_hit) {
+				getlin (qbuf, buf);
+				(void) lcase (buf);
+				if (strcmp (buf, "yes")) {
+				  flags.move = 0;
+				  return(TRUE);
+				}
+			} else {
+#endif
 			Sprintf(qbuf, "Really attack %s?", mon_nam(mtmp));
 			if (yn(qbuf) != 'y') {
 				flags.move = 0;
 				return(TRUE);
 			}
+#ifdef PARANOID
+			}
+#endif
 		}
 	}
 
diff --git a/dat/opthelp b/dat/opthelp
index 4dade58..09c7d5f 100644
--- a/dat/opthelp
+++ b/dat/opthelp
@@ -24,6 +24,9 @@ null           allow nulls to be sent to your terminal            [TRUE]
                try turning this option off (forcing NetHack to use its own
                delay code) if moving objects seem to teleport across rooms
 number_pad     use the number keys to move instead of yuhjklbn    [FALSE]
+paranoid_hit   use paranoid hit mode (require "yes" instead of just "y",
+               ensuring you don't hit peaceful denizens by mistake while
+			   moving with the "y"-key)                           [FALSE]
 perm_invent    keep inventory in a permanent window               [FALSE]
 prayconfirm    use confirmation prompt when #pray command issued  [TRUE]
 pushweapon     when wielding a new weapon, put your previously
